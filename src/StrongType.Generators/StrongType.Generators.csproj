<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <LangVersion>9.0</LangVersion>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <PackageId>StrongTypeId.Generators</PackageId>
    <Authors>Yann ROBIN</Authors>
    <PackageTags>stronglytypedid strongid strong identifier stronglytyped json newtonsoft strongtypeid</PackageTags>
    <Description>Generate ToString() method for StrongTypeId at compilation time</Description>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <BuildOutputTargetFolder>analyzers</BuildOutputTargetFolder>
    <TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificBuildOutput);CopyProjectReferencesToPackage</TargetsForTfmSpecificBuildOutput>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.Common" Version="3.8.0" />
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="3.8.0" />
    <PackageReference Include="Scriban" Version="2.1.2" PrivateAssets="all" GeneratePathProperty="true" />

    <!-- Package the Scriban dependency alongside the generator assembly -->
    <None Include="$(PkgScriban)\lib\netstandard2.0\*.dll" Pack="true" PackagePath="$(BuildOutputTargetFolder)/$(TargetFramework)" Visible="false" />
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Include="@(None -&gt; WithMetadataValue('Extension', '.sbntxt'))" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\StrongType\StrongType.csproj">
      <ReferenceOutputAssembly>true</ReferenceOutputAssembly>
      <IncludeAssets>StrongType.dll</IncludeAssets>
    </ProjectReference>
  </ItemGroup>

  <Target DependsOnTargets="ResolveReferences" Name="CopyProjectReferencesToPackage">
    <ItemGroup>
      <BuildOutputInPackage Include="@(ReferenceCopyLocalPaths->WithMetadataValue('ReferenceSourceTarget', 'ProjectReference'))"/>
    </ItemGroup>
  </Target>
</Project>
